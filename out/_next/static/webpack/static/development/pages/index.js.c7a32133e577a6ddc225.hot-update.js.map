{"version":3,"file":"static/webpack/static/development/pages/index.js.c7a32133e577a6ddc225.hot-update.js","sources":["webpack:///./src/pages/index.tsx"],"sourcesContent":["import React from 'react';\n\nimport defaultPage from '../hocs/defaultPage';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\n\nfunction Page() {\n    const toDoList = [\n        {\n            label: 'TypeScript all the way;',\n            checked: false\n        },\n        {\n            label: 'Offline PWA support;',\n            checked: false\n        },\n        {\n            label: 'Error on demand via initialProps',\n            checked: false\n        }\n    ];\n\n    return (\n        <Layout>\n            <SEO\n                description=\"A Boilerplate for a PWA web application with TypeScript and tests.\"\n            />\n            <h1>Hello Next.js Boilerplate</h1>\n            <p>This is a boilerplate for Next.js using almost no dependencies beside the ones that Next.js requires.</p>\n\n            <h2>Requirements</h2>\n            <ul>\n                <li>Node 10 or later;</li>\n                <li>MacOS, Windows and Linux;</li>\n            </ul>\n\n            <h2>Main features:</h2>\n            <ul>\n                <li>Server side rendering;</li>\n                <li>Client side page transitions;</li>\n                <li>Custom context around the whole application;</li>\n                <li>Access context using <code>useApplicationContext</code> hook;</li>\n                <li>Easy SEO component;</li>\n                <li>Custom error page that matches Layout;</li>\n                <li>TypeScript configuration;</li>\n                <li>Jest / React Testing library configured for TS;</li>\n            </ul>\n\n            <h2>To do list:</h2>\n            {\n                toDoList.map((item, index) => (\n                    <p key={ `todo-item-${ index }` }>\n                        <label>\n                            <input type=\"checkbox\" checked={ item.checked } disabled />\n                            { ' ' }\n                            { item.label }\n                        </label>\n                    </p>\n                ))\n            }\n        </Layout>\n    );\n};\n\nPage.getInitialProps = () => {\n    return {\n        pageType: 'index'\n    };\n};\n \nexport default defaultPage(Page);"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAYA;AACA;AADA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;;;;A","sourceRoot":""}